{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport erc20 from 'config/abi/erc20.json';\nexport var getContract = function getContract(provider, address) {\n  var web3 = new Web3(provider);\n  var contract = new web3.eth.Contract(erc20, address);\n  return contract;\n};\nexport var getAllowance = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lpContract, masterChefContract, account) {\n    var allowance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return lpContract.methods.allowance(account, masterChefContract.options.address).call();\n\n          case 3:\n            allowance = _context.sent;\n            return _context.abrupt(\"return\", allowance);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", '0');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function getAllowance(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getTokenBalance = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(provider, tokenAddress, userAddress) {\n    var contract, balance;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            contract = getContract(provider, tokenAddress);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return contract.methods.balanceOf(userAddress).call();\n\n          case 4:\n            balance = _context2.sent;\n            return _context2.abrupt(\"return\", balance);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", '0');\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function getTokenBalance(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/utils/erc20.ts"],"names":["Web3","erc20","getContract","provider","address","web3","contract","eth","Contract","getAllowance","lpContract","masterChefContract","account","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","balanceOf","balance"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAIA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAyBC,OAAzB,EAA6C;AACtE,MAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,QAAT,CAAb;AACA,MAAMG,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CAAuBP,KAAvB,EAAqDG,OAArD,CAAjB;AACA,SAAOE,QAAP;AACD,CAJM;AAMP,OAAO,IAAMG,YAAY;AAAA,sEAAG,iBAC1BC,UAD0B,EAE1BC,kBAF0B,EAG1BC,OAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMQF,UAAU,CAACG,OAAX,CAAmBC,SAAnB,CAA6BF,OAA7B,EAAsCD,kBAAkB,CAACI,OAAnB,CAA2BX,OAAjE,EAA0EY,IAA1E,EANR;;AAAA;AAMlBF,YAAAA,SANkB;AAAA,6CAOjBA,SAPiB;;AAAA;AAAA;AAAA;AAAA,6CASjB,GATiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZL,YAAY;AAAA;AAAA;AAAA,GAAlB;AAaP,OAAO,IAAMQ,eAAe;AAAA,uEAAG,kBAC7Bd,QAD6B,EAE7Be,YAF6B,EAG7BC,WAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAKvBb,YAAAA,QALuB,GAKZJ,WAAW,CAACC,QAAD,EAAWe,YAAX,CALC;AAAA;AAAA;AAAA,mBAOGZ,QAAQ,CAACO,OAAT,CAAiBO,SAAjB,CAA2BD,WAA3B,EAAwCH,IAAxC,EAPH;;AAAA;AAOrBK,YAAAA,OAPqB;AAAA,8CAQpBA,OARoB;;AAAA;AAAA;AAAA;AAAA,8CAUpB,GAVoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfJ,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}