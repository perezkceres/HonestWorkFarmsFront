{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/contexts/RefreshContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nvar ULTRA_INTERVAL = 3000;\nvar FAST_INTERVAL = 10000;\nvar SLOW_INTERVAL = 60000;\nvar RefreshContext = /*#__PURE__*/React.createContext({\n  slow: 0,\n  fast: 0,\n  ultra: 0\n}); // This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\n\nvar RefreshContextProvider = function RefreshContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      slow = _useState2[0],\n      setSlow = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fast = _useState4[0],\n      setFast = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ultra = _useState6[0],\n      setUltra = _useState6[1];\n\n  useEffect(function () {\n    var interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setFast(function (prev) {\n                return prev + 1;\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), FAST_INTERVAL);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  useEffect(function () {\n    var interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setSlow(function (prev) {\n                return prev + 1;\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })), SLOW_INTERVAL);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  useEffect(function () {\n    var interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setUltra(function (prev) {\n                return prev + 1;\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })), ULTRA_INTERVAL);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RefreshContext.Provider, {\n    value: {\n      slow: slow,\n      fast: fast,\n      ultra: ultra\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(RefreshContextProvider, \"CvnHkJgUQVnP6TG9RaB9OMCIwTM=\");\n\n_c = RefreshContextProvider;\nexport { RefreshContext, RefreshContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"RefreshContextProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/contexts/RefreshContext.tsx"],"names":["React","useState","useEffect","ULTRA_INTERVAL","FAST_INTERVAL","SLOW_INTERVAL","RefreshContext","createContext","slow","fast","ultra","RefreshContextProvider","children","setSlow","setFast","setUltra","interval","setInterval","prev","clearInterval"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,IAAMC,cAAc,GAAG,IAAvB;AACA,IAAMC,aAAa,GAAG,KAAtB;AACA,IAAMC,aAAa,GAAG,KAAtB;AAEA,IAAMC,cAAc,gBAAGN,KAAK,CAACO,aAAN,CAAoB;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE,CAAjB;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAApB,CAAvB,C,CAEA;;AACA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACvBX,QAAQ,CAAC,CAAD,CADe;AAAA;AAAA,MACxCO,IADwC;AAAA,MAClCK,OADkC;;AAAA,mBAEvBZ,QAAQ,CAAC,CAAD,CAFe;AAAA;AAAA,MAExCQ,IAFwC;AAAA,MAElCK,OAFkC;;AAAA,mBAGrBb,QAAQ,CAAC,CAAD,CAHa;AAAA;AAAA,MAGxCS,KAHwC;AAAA,MAGjCK,QAHiC;;AAK/Cb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,QAAQ,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAC3BH,cAAAA,OAAO,CAAC,UAACI,IAAD;AAAA,uBAAUA,IAAI,GAAG,CAAjB;AAAA,eAAD,CAAP;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAEzBd,aAFyB,CAA5B;AAGA,WAAO;AAAA,aAAMe,aAAa,CAACH,QAAD,CAAnB;AAAA,KAAP;AACD,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,QAAQ,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAC3BJ,cAAAA,OAAO,CAAC,UAACK,IAAD;AAAA,uBAAUA,IAAI,GAAG,CAAjB;AAAA,eAAD,CAAP;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAEzBb,aAFyB,CAA5B;AAGA,WAAO;AAAA,aAAMc,aAAa,CAACH,QAAD,CAAnB;AAAA,KAAP;AACD,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,QAAQ,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAC3BF,cAAAA,QAAQ,CAAC,UAACG,IAAD;AAAA,uBAAUA,IAAI,GAAG,CAAjB;AAAA,eAAD,CAAR;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAEzBf,cAFyB,CAA5B;AAGA,WAAO;AAAA,aAAMgB,aAAa,CAACH,QAAD,CAAnB;AAAA,KAAP;AACD,GALQ,EAKN,EALM,CAAT;AAOA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAER,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,IAAI,EAAJA,IAAR;AAAcC,MAAAA,KAAK,EAALA;AAAd,KAAhC;AAAA,cAAwDE;AAAxD;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA3BD;;GAAMD,sB;;KAAAA,sB;AA6BN,SAASL,cAAT,EAAyBK,sBAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst ULTRA_INTERVAL = 3000\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0, ultra: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const [ultra, setUltra] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setUltra((prev) => prev + 1)\r\n    }, ULTRA_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast, ultra }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n"]},"metadata":{},"sourceType":"module"}