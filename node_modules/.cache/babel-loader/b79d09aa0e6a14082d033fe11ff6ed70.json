{"ast":null,"code":"var roundToTwoDp = function roundToTwoDp(number) {\n  return Math.round(number * 100) / 100;\n};\n\nexport var calculateCakeEarnedPerThousandDollars = function calculateCakeEarnedPerThousandDollars(_ref) {\n  var numberOfDays = _ref.numberOfDays,\n      farmApy = _ref.farmApy,\n      cakePrice = _ref.cakePrice;\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  var timesCompounded = 365; //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n\n  var apyAsDecimal = farmApy / 100;\n  var daysAsDecimalOfYear = numberOfDays / timesCompounded; //   Calculate the starting CAKE balance with a dollar balance of $1000.\n\n  var principal = 1000 / cakePrice; // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n\n  var finalAmount = principal * Math.pow(1 + apyAsDecimal / timesCompounded, timesCompounded * daysAsDecimalOfYear); // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n\n  var interestEarned = finalAmount - principal;\n  return roundToTwoDp(interestEarned);\n};\nexport var apyModalRoi = function apyModalRoi(_ref2) {\n  var amountEarned = _ref2.amountEarned,\n      amountInvested = _ref2.amountInvested;\n  var percentage = amountEarned / amountInvested * 100;\n  return percentage.toFixed(2);\n};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/utils/compoundApyHelpers.ts"],"names":["roundToTwoDp","number","Math","round","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","cakePrice","timesCompounded","apyAsDecimal","daysAsDecimalOfYear","principal","finalAmount","interestEarned","apyModalRoi","amountEarned","amountInvested","percentage","toFixed"],"mappings":"AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAAA,SAAYC,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,GAApB,IAA2B,GAAvC;AAAA,CAArB;;AAEA,OAAO,IAAMG,qCAAqC,GAAG,SAAxCA,qCAAwC,OAA0C;AAAA,MAAvCC,YAAuC,QAAvCA,YAAuC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC7F;AACA,MAAMC,eAAe,GAAG,GAAxB,CAF6F,CAG7F;;AACA,MAAMC,YAAY,GAAGH,OAAO,GAAG,GAA/B;AACA,MAAMI,mBAAmB,GAAGL,YAAY,GAAGG,eAA3C,CAL6F,CAM7F;;AACA,MAAMG,SAAS,GAAG,OAAOJ,SAAzB,CAP6F,CAS7F;;AACA,MAAMK,WAAW,GAAGD,SAAS,YAAI,IAAIF,YAAY,GAAGD,eAAvB,EAA4CA,eAAe,GAAGE,mBAA9D,CAA7B,CAV6F,CAY7F;;AACA,MAAMG,cAAc,GAAGD,WAAW,GAAGD,SAArC;AACA,SAAOX,YAAY,CAACa,cAAD,CAAnB;AACD,CAfM;AAiBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAsC;AAAA,MAAnCC,YAAmC,SAAnCA,YAAmC;AAAA,MAArBC,cAAqB,SAArBA,cAAqB;AAC/D,MAAMC,UAAU,GAAIF,YAAY,GAAGC,cAAhB,GAAkC,GAArD;AACA,SAAOC,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAAP;AACD,CAHM","sourcesContent":["const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}