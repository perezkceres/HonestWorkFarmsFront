{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Teaser/components/FarmCard/CardActionsContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-top: 16px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useMemo, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { getContract } from 'utils/erc20';\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit';\nimport { useFarmFromPid, useFarmUser } from 'state/hooks';\nimport useI18n from 'hooks/useI18n';\nimport UnlockButton from 'components/UnlockButton';\nimport { useApprove } from 'hooks/useApprove';\nimport StakeAction from './StakeAction';\nimport HarvestAction from './HarvestAction';\nvar Action = styled.div(_templateObject());\n_c = Action;\n\nvar CardActions = function CardActions(_ref) {\n  _s();\n\n  var farm = _ref.farm,\n      ethereum = _ref.ethereum,\n      account = _ref.account;\n  var TranslateString = useI18n();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      requestedApproval = _useState2[0],\n      setRequestedApproval = _useState2[1];\n\n  var _useFarmFromPid = useFarmFromPid(farm.pid),\n      pid = _useFarmFromPid.pid,\n      lpAddresses = _useFarmFromPid.lpAddresses,\n      tokenAddresses = _useFarmFromPid.tokenAddresses,\n      isTokenOnly = _useFarmFromPid.isTokenOnly,\n      depositFeeBP = _useFarmFromPid.depositFeeBP;\n\n  var _useFarmUser = useFarmUser(pid),\n      allowance = _useFarmUser.allowance,\n      tokenBalance = _useFarmUser.tokenBalance,\n      stakedBalance = _useFarmUser.stakedBalance,\n      earnings = _useFarmUser.earnings;\n\n  var lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID];\n  var tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\n  var lpName = farm.lpSymbol.toUpperCase();\n  var isApproved = account && allowance && allowance.isGreaterThan(0);\n  var lpContract = useMemo(function () {\n    if (isTokenOnly) {\n      return getContract(ethereum, tokenAddress);\n    }\n\n    return getContract(ethereum, lpAddress);\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly]);\n\n  var _useApprove = useApprove(lpContract),\n      onApprove = _useApprove.onApprove;\n\n  var handleApprove = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setRequestedApproval(true);\n            _context.next = 4;\n            return onApprove();\n\n          case 4:\n            setRequestedApproval(false);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  })), [onApprove]);\n\n  var renderApprovalOrStakeButton = function renderApprovalOrStakeButton() {\n    return isApproved ? /*#__PURE__*/_jsxDEV(StakeAction, {\n      stakedBalance: stakedBalance,\n      tokenBalance: tokenBalance,\n      tokenName: lpName,\n      pid: pid,\n      depositFeeBP: depositFeeBP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this) : /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"8px\",\n      fullWidth: true,\n      disabled: requestedApproval,\n      onClick: handleApprove,\n      children: TranslateString(999, 'Approve Contract')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Action, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"secondary\",\n        fontSize: \"12px\",\n        pr: \"3px\",\n        children: \"\\uD83D\\uDE9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: TranslateString(999, 'Earned')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(HarvestAction, {\n      earnings: earnings,\n      pid: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"secondary\",\n        fontSize: \"12px\",\n        pr: \"3px\",\n        children: lpName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: TranslateString(999, 'Staked')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {\n      mt: \"8px\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }, _this) : renderApprovalOrStakeButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CardActions, \"zr1DH5qAvBfmqBMqrBQG+oJBpUw=\", false, function () {\n  return [useI18n, useFarmFromPid, useFarmUser, useApprove];\n});\n\n_c2 = CardActions;\nexport default CardActions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Action\");\n$RefreshReg$(_c2, \"CardActions\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Teaser/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useMemo","useState","useCallback","styled","getContract","Button","Flex","Text","useFarmFromPid","useFarmUser","useI18n","UnlockButton","useApprove","StakeAction","HarvestAction","Action","div","CardActions","farm","ethereum","account","TranslateString","requestedApproval","setRequestedApproval","pid","lpAddresses","tokenAddresses","isTokenOnly","depositFeeBP","allowance","tokenBalance","stakedBalance","earnings","lpAddress","process","env","REACT_APP_CHAIN_ID","tokenAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","lpContract","onApprove","handleApprove","console","error","renderApprovalOrStakeButton"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          🚜\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n"]},"metadata":{},"sourceType":"module"}