{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Home/components/Metamask.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  font-size: 14px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 0px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 0px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nbackground-image: url('/images/egg/meta.png');\\nbackground-size: cover;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button, LinkExternal, Flex } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useI18n from 'hooks/useI18n';\nimport { useAllHarvest } from 'hooks/useHarvest';\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance';\nimport { getCakeAddress } from '../../../utils/addressHelpers';\nvar StyledFarmStakingCard = styled(Card)(_templateObject());\n_c = StyledFarmStakingCard;\nvar Block = styled.div(_templateObject2());\nvar TokenImageWrapper = styled.div(_templateObject3());\n_c2 = TokenImageWrapper;\nvar CardImage = styled.img(_templateObject4());\n_c3 = CardImage;\nvar Label = styled.div(_templateObject5(), function (_ref) {\n  var theme = _ref.theme;\n  return theme.colors.textSubtle;\n});\nvar Actions = styled.div(_templateObject6());\nvar token = getCakeAddress();\n\nvar FarmedStakingCard = function FarmedStakingCard() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      pendingTx = _useState2[0],\n      setPendingTx = _useState2[1];\n\n  var _useWallet = useWallet(),\n      account = _useWallet.account;\n\n  var TranslateString = useI18n();\n  var FarmsWithBalance = useFarmsWithBalance();\n  var balancesWithValue = FarmsWithBalance.filter(function (balanceType) {\n    return balanceType.balance.toNumber() > 0;\n  });\n\n  var _useAllHarvest = useAllHarvest(balancesWithValue.map(function (farmWithBalance) {\n    return farmWithBalance.pid;\n  })),\n      onReward = _useAllHarvest.onReward;\n\n  var harvestAllFarms = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setPendingTx(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return onReward();\n\n          case 4:\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 8:\n            _context.prev = 8;\n            setPendingTx(false);\n            return _context.finish(8);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 6, 8, 11]]);\n  })), [onReward]);\n  var addWatchJaguarToken = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var provider, wasAdded;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            provider = window.ethereum;\n\n            if (!provider) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.prev = 2;\n            _context2.next = 5;\n            return provider.request({\n              method: 'wallet_watchAsset',\n              params: {\n                type: 'ERC20',\n                options: {\n                  address: token,\n                  symbol: 'honest',\n                  decimals: '18',\n                  image: '/logo.png'\n                }\n              }\n            });\n\n          case 5:\n            wasAdded = _context2.sent;\n\n            if (wasAdded) {\n              console.log('Token was added');\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  })), []);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: \"Add \\uD83D\\uDE9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        mb: \"15px\",\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          mb: \"20px\",\n          small: true,\n          href: \"https://explorer-mainnet.maticvigil.com/tokens/\".concat(token),\n          children: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TokenImageWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CardImage, {\n          src: \"/images/egg/9.png\",\n          alt: \"Farm honest logo\",\n          width: 60,\n          height: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addWatchJaguarToken,\n          size: \"sm\",\n          children: [\"+ Add \\uD83D\\uDE9C to \", /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              marginLeft: 8\n            },\n            width: 16,\n            src: \"https://jaguarswap.com/images/tokens/metamask.png\",\n            alt: \"metamask logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FarmedStakingCard, \"UOAjZ6Kc45vH2C9afQzl56Icf5c=\", false, function () {\n  return [useWallet, useI18n, useFarmsWithBalance, useAllHarvest];\n});\n\n_c4 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"TokenImageWrapper\");\n$RefreshReg$(_c3, \"CardImage\");\n$RefreshReg$(_c4, \"FarmedStakingCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Home/components/Metamask.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","LinkExternal","Flex","useWallet","useI18n","useAllHarvest","useFarmsWithBalance","getCakeAddress","StyledFarmStakingCard","Block","div","TokenImageWrapper","CardImage","img","Label","theme","colors","textSubtle","Actions","token","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","FarmsWithBalance","balancesWithValue","filter","balanceType","balance","toNumber","map","farmWithBalance","pid","onReward","harvestAllFarms","addWatchJaguarToken","provider","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","wasAdded","console","log","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\nimport { usePriceCakeBusd } from '../../../state/hooks'\nimport useTokenBalance from '../../../hooks/useTokenBalance'\nimport { getCakeAddress } from '../../../utils/addressHelpers'\nimport useAllEarnings from '../../../hooks/useAllEarnings'\nimport { getBalanceNumber } from '../../../utils/formatBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\nbackground-image: url('/images/egg/meta.png');\nbackground-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n \n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst TokenImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 0px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst token = getCakeAddress();\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const FarmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = FarmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  const addWatchJaguarToken = useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const provider = window.ethereum\n    if (provider) {\n      try {\n        // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n        const wasAdded = await provider.request({\n          method: 'wallet_watchAsset',\n          params: {\n            type: 'ERC20',\n            options: {\n              address: token,\n              symbol: 'honest',\n              decimals: '18',\n              image: '/logo.png',\n            },\n          },\n        })\n\n        if (wasAdded) {\n          console.log('Token was added')\n        }\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n  }, [])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          Add 🚜\n        </Heading>\n        <Flex flexDirection=\"column\" mb=\"15px\">\n          <LinkExternal mb=\"20px\" small href={`https://explorer-mainnet.maticvigil.com/tokens/${token}`}>\n            {token}\n          </LinkExternal>\n        </Flex>\n        <TokenImageWrapper>\n          <CardImage src=\"/images/egg/9.png\" alt=\"Farm honest logo\" width={60} height={60} />\n          <hr/>\n          <Button onClick={addWatchJaguarToken} size=\"sm\">\n            + Add 🚜 to <img style={{ marginLeft: 8 }} width={16} src=\"https://jaguarswap.com/images/tokens/metamask.png\" alt=\"metamask logo\" />\n          </Button>\n        </TokenImageWrapper>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard"]},"metadata":{},"sourceType":"module"}