{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Pools/components/DepositModal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Button, Modal } from '@pancakeswap-libs/uikit';\nimport ModalActions from 'components/ModalActions';\nimport TokenInput from '../../../components/TokenInput';\nimport useI18n from '../../../hooks/useI18n';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\n\nvar DepositModal = function DepositModal(_ref) {\n  _s();\n\n  var max = _ref.max,\n      onConfirm = _ref.onConfirm,\n      onDismiss = _ref.onDismiss,\n      _ref$tokenName = _ref.tokenName,\n      tokenName = _ref$tokenName === void 0 ? '' : _ref$tokenName;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pendingTx = _useState4[0],\n      setPendingTx = _useState4[1];\n\n  var TranslateString = useI18n();\n  var fullBalance = useMemo(function () {\n    return getFullDisplayBalance(max);\n  }, [max]); // console.log(\"depositFeeBP\",burnFeeBP)\n\n  var handleChange = useCallback(function (e) {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  var handleSelectMax = useCallback(function () {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"\".concat(TranslateString(316, 'Deposit'), \" \").concat(tokenName, \" Tokens\"),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(TokenInput, {\n      value: val,\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      max: fullBalance,\n      symbol: tokenName // burnFee={burnFeeBP}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"secondary\",\n        onClick: onDismiss,\n        children: TranslateString(462, 'Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        disabled: pendingTx,\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setPendingTx(true);\n                  _context.next = 3;\n                  return onConfirm(val);\n\n                case 3:\n                  setPendingTx(false);\n                  onDismiss();\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })),\n        children: pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DepositModal, \"6CJIGJ2Y3KmfnLsU3NCO1RJwS2U=\", false, function () {\n  return [useI18n];\n});\n\n_c = DepositModal;\nexport default DepositModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepositModal\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Pools/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","TokenInput","useI18n","getFullDisplayBalance","DepositModal","max","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  burnFeeBP?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max])\r\n\r\n  // console.log(\"depositFeeBP\",burnFeeBP)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        // burnFee={burnFeeBP}\r\n      />\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n"]},"metadata":{},"sourceType":"module"}