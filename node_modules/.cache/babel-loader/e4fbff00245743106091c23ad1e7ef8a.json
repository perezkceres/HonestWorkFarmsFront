{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/contexts/BlockContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getWeb3 } from 'utils/web3';\nvar BlockContext = /*#__PURE__*/React.createContext(0);\n\nvar BlockContextProvider = function BlockContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var previousBlock = useRef(0);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      block = _useState2[0],\n      setBlock = _useState2[1];\n\n  useEffect(function () {\n    var web3 = getWeb3();\n    var interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var blockNumber;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getBlockNumber();\n\n            case 2:\n              blockNumber = _context.sent;\n\n              if (blockNumber !== previousBlock.current) {\n                previousBlock.current = blockNumber;\n                setBlock(blockNumber);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), 6000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlockContext.Provider, {\n    value: block,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(BlockContextProvider, \"fOwaCK9umPiPLkJdeqbxMowrkXU=\");\n\n_c = BlockContextProvider;\nexport { BlockContext, BlockContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockContextProvider\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/contexts/BlockContext.tsx"],"names":["React","useState","useEffect","useRef","getWeb3","BlockContext","createContext","BlockContextProvider","children","previousBlock","block","setBlock","web3","interval","setInterval","eth","getBlockNumber","blockNumber","current","clearInterval"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,YAAY,gBAAGL,KAAK,CAACM,aAAN,CAAoB,CAApB,CAArB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7C,MAAMC,aAAa,GAAGN,MAAM,CAAC,CAAD,CAA5B;;AAD6C,kBAEnBF,QAAQ,CAAC,CAAD,CAFW;AAAA;AAAA,MAEtCS,KAFsC;AAAA,MAE/BC,QAF+B;;AAI7CT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,IAAI,GAAGR,OAAO,EAApB;AACA,QAAMS,QAAQ,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDF,IAAI,CAACG,GAAL,CAASC,cAAT,EADC;;AAAA;AACrBC,cAAAA,WADqB;;AAE3B,kBAAIA,WAAW,KAAKR,aAAa,CAACS,OAAlC,EAA2C;AACzCT,gBAAAA,aAAa,CAACS,OAAd,GAAwBD,WAAxB;AACAN,gBAAAA,QAAQ,CAACM,WAAD,CAAR;AACD;;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAMzB,IANyB,CAA5B;AAQA,WAAO;AAAA,aAAME,aAAa,CAACN,QAAD,CAAnB;AAAA,KAAP;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEH,KAA9B;AAAA,cAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAlBD;;GAAMD,oB;;KAAAA,oB;AAoBN,SAASF,YAAT,EAAuBE,oBAAvB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n"]},"metadata":{},"sourceType":"module"}