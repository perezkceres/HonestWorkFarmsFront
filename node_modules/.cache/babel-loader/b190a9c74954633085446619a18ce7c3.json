{"ast":null,"code":"(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this._strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4;\n      var b; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this._strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        b = c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move(dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move(dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  }; // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol[\"for\"] === 'function') {\n    try {\n      BN.prototype[Symbol[\"for\"]('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q._strip();\n    }\n\n    a._strip(); // Denormalize\n\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  }; // WARNING: DEPRECATED\n\n\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/browserify-sign/node_modules/bn.js/lib/bn.js"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","require","e","num","Array","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","_strip","toArray","Math","ceil","i","j","w","off","parseHex","str","end","r","len","z","c","charCodeAt","b","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","move","src","_move","clone","_expand","size","strip","_normSign","Symbol","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","FFTM","x","y","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","ireduce","rlen","split","imulK","undefined","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u"],"mappings":"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","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"]},"metadata":{},"sourceType":"script"}