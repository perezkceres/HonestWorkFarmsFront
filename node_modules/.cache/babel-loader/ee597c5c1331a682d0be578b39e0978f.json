{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Farms/components/FarmCard/HarvestAction.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { useHarvest } from 'hooks/useHarvest';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport styled from 'styled-components';\nimport useStake from '../../../../hooks/useStake';\nvar BalanceAndCompound = styled.div(_templateObject());\n_c = BalanceAndCompound;\n\nvar HarvestAction = function HarvestAction(_ref) {\n  _s();\n\n  var earnings = _ref.earnings,\n      pid = _ref.pid;\n  var TranslateString = useI18n();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      pendingTx = _useState2[0],\n      setPendingTx = _useState2[1];\n\n  var _useHarvest = useHarvest(pid),\n      onReward = _useHarvest.onReward;\n\n  var _useStake = useStake(pid),\n      onStake = _useStake.onStake;\n\n  var rawEarningsBalance = getBalanceNumber(earnings);\n  var displayBalance = rawEarningsBalance.toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"8px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      color: rawEarningsBalance === 0 ? 'textDisabled' : 'text',\n      children: displayBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: rawEarningsBalance === 0 || pendingTx,\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setPendingTx(true);\n                  _context.next = 3;\n                  return onReward();\n\n                case 3:\n                  setPendingTx(false);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })),\n        children: TranslateString(999, 'Harvest')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(HarvestAction, \"xbz64NzyfVJyA6YsfB8Be6WEnKA=\", false, function () {\n  return [useI18n, useHarvest, useStake];\n});\n\n_c2 = HarvestAction;\nexport default HarvestAction;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BalanceAndCompound\");\n$RefreshReg$(_c2, \"HarvestAction\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","Button","Flex","Heading","useI18n","useHarvest","getBalanceNumber","styled","useStake","BalanceAndCompound","div","HarvestAction","earnings","pid","TranslateString","pendingTx","setPendingTx","onReward","onStake","rawEarningsBalance","displayBalance","toLocaleString"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,yBAAtC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAOA,IAAMC,kBAAkB,GAAGF,MAAM,CAACG,GAAV,mBAAxB;KAAMD,kB;;AAON,IAAME,aAA6C,GAAG,SAAhDA,aAAgD,OAAuB;AAAA;;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3E,MAAMC,eAAe,GAAGV,OAAO,EAA/B;;AAD2E,kBAEzCJ,QAAQ,CAAC,KAAD,CAFiC;AAAA;AAAA,MAEpEe,SAFoE;AAAA,MAEzDC,YAFyD;;AAAA,oBAGtDX,UAAU,CAACQ,GAAD,CAH4C;AAAA,MAGnEI,QAHmE,eAGnEA,QAHmE;;AAAA,kBAIvDT,QAAQ,CAACK,GAAD,CAJ+C;AAAA,MAInEK,OAJmE,aAInEA,OAJmE;;AAM3E,MAAMC,kBAAkB,GAAGb,gBAAgB,CAACM,QAAD,CAA3C;AACA,MAAMQ,cAAc,GAAGD,kBAAkB,CAACE,cAAnB,EAAvB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,cAAc,EAAC,eAA9B;AAA8C,IAAA,UAAU,EAAC,QAAzD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,kBAAkB,KAAK,CAAvB,GAA2B,cAA3B,GAA4C,MAA5D;AAAA,gBAAqEC;AAArE;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,kBAAD;AAAA,6BAEE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAED,kBAAkB,KAAK,CAAvB,IAA4BJ,SADxC;AAEE,QAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AACPC,kBAAAA,YAAY,CAAC,IAAD,CAAZ;AADO;AAAA,yBAEDC,QAAQ,EAFP;;AAAA;AAGPD,kBAAAA,YAAY,CAAC,KAAD,CAAZ;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF,EAFT;AAAA,kBAQGF,eAAe,CAAC,GAAD,EAAM,SAAN;AARlB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CA3BD;;GAAMH,a;UACoBP,O,EAEHC,U,EACDG,Q;;;MAJhBG,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport styled from 'styled-components'\r\nimport useStake from '../../../../hooks/useStake'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { onStake } = useStake(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb='8px' justifyContent='space-between' alignItems='center'>\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <BalanceAndCompound>\r\n    \r\n        <Button\r\n          disabled={rawEarningsBalance === 0 || pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n        >\r\n          {TranslateString(999, 'Harvest')}\r\n        </Button>\r\n      </BalanceAndCompound>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n"]},"metadata":{},"sourceType":"module"}