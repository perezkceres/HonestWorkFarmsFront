{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nexport var approve = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lpContract, masterChefContract, account) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n              from: account\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function approve(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var stake = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(masterChefContract, pid, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function stake(_x4, _x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var smartStake = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(smartChefContract, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", smartChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function smartStake(_x8, _x9, _x10) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var smartStakeBnb = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(smartChefContract, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", smartChefContract.methods.deposit().send({\n              from: account,\n              value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function smartStakeBnb(_x11, _x12, _x13) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var unstake = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(masterChefContract, pid, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function unstake(_x14, _x15, _x16, _x17) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var smartChefUnstake = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(smartChefContract, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            // buggy CTC\n            if (smartChefContract.options.address === '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156') {\n              smartChefContract.methods.emergencyWithdraw().send({\n                from: account\n              }).on('transactionHash', function (tx) {\n                return tx.transactionHash;\n              });\n            } else {\n              smartChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n                from: account\n              }).on('transactionHash', function (tx) {\n                return tx.transactionHash;\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function smartChefUnstake(_x18, _x19, _x20) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var sousUnstake = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(sousChefContract, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC')) {\n              _context7.next = 2;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", sousChefContract.methods.emergencyWithdraw().send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 2:\n            if (!(sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831')) {\n              _context7.next = 4;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", sousChefContract.methods.emergencyWithdraw().send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 4:\n            return _context7.abrupt(\"return\", sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function sousUnstake(_x21, _x22, _x23) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var sousEmegencyUnstake = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(sousChefContract, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", sousChefContract.methods.emergencyWithdraw().send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function sousEmegencyUnstake(_x24, _x25, _x26) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var harvest = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(masterChefContract, pid, account) {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", masterChefContract.methods.deposit(pid, '0').send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function harvest(_x27, _x28, _x29) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var smartHarvest = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(sousChefContract, account) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", sousChefContract.methods.deposit('0').send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function smartHarvest(_x30, _x31) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var smartHarvestBnb = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(sousChefContract, account) {\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            return _context11.abrupt(\"return\", sousChefContract.methods.deposit().send({\n              from: account,\n              value: new BigNumber(0)\n            }).on('transactionHash', function (tx) {\n              return tx.transactionHash;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function smartHarvestBnb(_x32, _x33) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var participateForest = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(blackContract, amount, account) {\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            return _context12.abrupt(\"return\", blackContract.methods.participate(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), 100) // .participate(\"2\", 100)\n            .send({\n              from: account,\n              gasPrice: '7000000000'\n            }).on('transactionHash', function (tx) {\n              return tx;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function participateForest(_x34, _x35, _x36) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nexport var claimForest = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(blackContract, account) {\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", blackContract.methods.claimReward().send({\n              from: account\n            }).on('transactionHash', function (tx) {\n              return tx;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function claimForest(_x37, _x38) {\n    return _ref13.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/FARMBOY/HonestWorkFarms/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","pow","toString","on","tx","transactionHash","smartStake","smartChefContract","smartStakeBnb","value","unstake","withdraw","smartChefUnstake","emergencyWithdraw","sousUnstake","sousChefContract","sousEmegencyUnstake","harvest","smartHarvest","smartHarvestBnb","participateForest","blackContract","participate","gasPrice","claimForest","claimReward"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const smartStake = async (smartChefContract, amount, account) =>\r\n  smartChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const smartStakeBnb = async (smartChefContract, amount, account) =>\r\n  smartChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const smartChefUnstake = async (smartChefContract, amount, account) => {\r\n  // buggy CTC\r\n  if (smartChefContract.options.address === '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156') {\r\n    smartChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  } else {\r\n    smartChefContract.methods\r\n      .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  }\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => tx.transactionHash)\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) =>\r\n  sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const smartHarvest = async (sousChefContract, account) =>\r\n  sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const smartHarvestBnb = async (sousChefContract, account) =>\r\n  sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => tx.transactionHash)\r\n\r\nexport const participateForest = async (blackContract, amount, account) => {\r\n  // console.log('amount', new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n  return blackContract.methods\r\n    .participate(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), 100)\r\n    // .participate(\"2\", 100)\r\n    .send({ from: account, gasPrice: '7000000000'  })\r\n    .on('transactionHash', (tx) => {\r\n      return tx\r\n    })\r\n}\r\n\r\nexport const claimForest = async (blackContract, account) => {\r\n  return blackContract.methods\r\n    .claimReward()\r\n    .send({ from: account})\r\n    .on('transactionHash', (tx) => {\r\n      return tx\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}